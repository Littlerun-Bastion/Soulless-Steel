[gd_scene load_steps=14 format=2]

[ext_resource path="res://PauseMenu.gd" type="Script" id=1]
[ext_resource path="res://assets/images/ui/pause_menu/self_destruct_button.png" type="Texture" id=2]
[ext_resource path="res://assets/images/ui/pause_menu/resume_button.png" type="Texture" id=3]
[ext_resource path="res://assets/images/ui/pause_menu/resume_button_highlight.png" type="Texture" id=4]
[ext_resource path="res://assets/images/ui/pause_menu/self_destruct_button_highlight.png" type="Texture" id=5]
[ext_resource path="res://PauseMenuParallax.gd" type="Script" id=6]
[ext_resource path="res://assets/fonts/TheJewishBitmap/TheJewishBitmap.otf" type="DynamicFontData" id=7]
[ext_resource path="res://assets/images/ui/menu/grid.png" type="Texture" id=8]

[sub_resource type="Theme" id=13]

[sub_resource type="DynamicFont" id=1]
size = 100
outline_size = 1
font_data = ExtResource( 7 )

[sub_resource type="DynamicFont" id=14]
size = 40
font_data = ExtResource( 7 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform float barRange : hint_range(0.0, 0.1) = 0.01;
uniform float barOffsetIntensity : hint_range(0.0, 0.01) = 0.000;
uniform float noiseQuality : hint_range(1.0, 5000) = 500;
uniform float noiseIntensity : hint_range(0.0, 0.03) = 0.000;
uniform float colorOffsetIntensity : hint_range(0.0, 2.0) = 0.175;
uniform float redMultiplier : hint_range(0.0, 0.01) = 0.006;
uniform float redIntensity : hint_range(0.0, 1.0) = 1.0;
uniform float greenMultiplier : hint_range(0.0, 0.01) = 0.0073;
uniform float greenIntensity : hint_range(0.0, 1.0) = 0.97;


float rand(vec2 co)
{
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

float verticalBar(float pos, float uvY, float offset)
{
    float edge0 = (pos - barRange);
    float edge1 = (pos + barRange);

    float x = smoothstep(edge0, pos, uvY) * offset;
    x -= smoothstep(pos, edge1, uvY) * offset;
    return x;
}

void fragment()
{
	float uvX, uvY;
	uvX = UV.x;
	uvY = UV.y;
    for (float i = 0.0; i < 0.71; i += 0.1313)
    {
        float d = mod(TIME * i, 1.7);
        float o = sin(1.0 - tan(TIME * 0.24 * i));
    	o *= barOffsetIntensity;
        uvX += verticalBar(d, uvY, o);
    }

    uvY *= noiseQuality;
    uvY = float(int(uvY)) * (1.0 / noiseQuality);
    float noise = rand(vec2(TIME * 0.00001, uvY));
	uvX += (noise * noiseIntensity)/15.0;

    vec2 offsetR = vec2(redMultiplier * sin(TIME * redIntensity), 0.0) * colorOffsetIntensity;
    vec2 offsetG = vec2(greenMultiplier * cos(TIME * greenIntensity), 0.0) * colorOffsetIntensity;

	vec2 uv = vec2(uvX, 1.0-uvY);
    float r = texture(SCREEN_TEXTURE, uv + offsetR).r;
    float g = texture(SCREEN_TEXTURE, uv + offsetG).g;
    float b = texture(SCREEN_TEXTURE, uv).b;

    COLOR = vec4(r, g, b, 1.0);
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/barRange = 0.01
shader_param/barOffsetIntensity = 0.002
shader_param/noiseQuality = 5000.0
shader_param/noiseIntensity = 0.006
shader_param/colorOffsetIntensity = 0.373
shader_param/redMultiplier = 0.002
shader_param/redIntensity = 0.133
shader_param/greenMultiplier = 0.002
shader_param/greenIntensity = 0.13

[node name="PauseMenu" type="CanvasLayer"]
pause_mode = 2
layer = 3
script = ExtResource( 1 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
layer = 1
scroll_base_scale = Vector2( 3, 1 )
scroll_ignore_camera_zoom = true
script = ExtResource( 6 )

[node name="BackLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2( 4000, 4000 )

[node name="ColorRect" type="ColorRect" parent="ParallaxBackground/BackLayer"]
show_behind_parent = true
margin_left = -605.0
margin_top = -726.0
margin_right = 7395.0
margin_bottom = 7274.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = SubResource( 13 )
color = Color( 0, 0, 0, 0 )

[node name="GridLayer" type="ParallaxLayer" parent="ParallaxBackground"]
visible = false
z_index = 2
motion_mirroring = Vector2( 4000, 4000 )

[node name="Grid" type="TextureRect" parent="ParallaxBackground/GridLayer"]
margin_left = -602.776
margin_top = -721.705
margin_right = 3397.22
margin_bottom = 3278.3
texture = ExtResource( 8 )

[node name="GridLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
visible = false
modulate = Color( 1, 1, 1, 0.14902 )
scale = Vector2( 0.5, 0.5 )
motion_scale = Vector2( -0.5, -0.5 )
motion_mirroring = Vector2( 4000, 4000 )

[node name="Grid" type="TextureRect" parent="ParallaxBackground/GridLayer2"]
visible = false
margin_left = -602.776
margin_top = -721.705
margin_right = 3397.22
margin_bottom = 3278.3
texture = ExtResource( 8 )

[node name="ColorRect" type="ColorRect" parent="."]
modulate = Color( 0, 0, 0, 0.286275 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0

[node name="Label" type="Label" parent="Control"]
margin_left = 21.2192
margin_top = 16.1432
margin_right = 1126.22
margin_bottom = 167.143
custom_fonts/font = SubResource( 1 )
text = "Runtime Functions"

[node name="Label2" type="Label" parent="Control"]
margin_left = 21.2192
margin_top = 117.591
margin_right = 1126.22
margin_bottom = 268.591
custom_fonts/font = SubResource( 14 )
text = "User advisory: This Interface does not halt the remote program runtime."

[node name="MarginContainer" type="MarginContainer" parent="Control"]
margin_left = 20.8721
margin_top = 168.686
margin_right = 770.872
margin_bottom = 412.686
rect_scale = Vector2( 0.66, 0.66 )

[node name="VBoxContainer" type="VBoxContainer" parent="Control/MarginContainer"]
margin_right = 750.0
margin_bottom = 244.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Resume" type="TextureButton" parent="Control/MarginContainer/VBoxContainer"]
margin_right = 750.0
margin_bottom = 120.0
texture_normal = ExtResource( 3 )
texture_hover = ExtResource( 4 )

[node name="Quit" type="TextureButton" parent="Control/MarginContainer/VBoxContainer"]
margin_top = 124.0
margin_right = 750.0
margin_bottom = 244.0
texture_normal = ExtResource( 2 )
texture_hover = ExtResource( 5 )

[node name="ShaderEffects" type="CanvasLayer" parent="."]
layer = 2

[node name="Tween" type="Tween" parent="ShaderEffects"]

[node name="VCREffect" type="ColorRect" parent="ShaderEffects"]
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[connection signal="pressed" from="Control/MarginContainer/VBoxContainer/Resume" to="." method="_on_Resume_pressed"]
[connection signal="pressed" from="Control/MarginContainer/VBoxContainer/Quit" to="." method="_on_Quit_pressed"]
