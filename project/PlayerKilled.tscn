[gd_scene load_steps=10 format=2]

[ext_resource path="res://assets/fonts/TheJewishBitmap/TheJewishBitmap.otf" type="DynamicFontData" id=1]
[ext_resource path="res://assets/images/ui/pause_menu/return_button.png" type="Texture" id=2]
[ext_resource path="res://assets/images/ui/pause_menu/return_button_pressed.png" type="Texture" id=3]
[ext_resource path="res://assets/images/ui/pause_menu/return_button_highlight.png" type="Texture" id=4]
[ext_resource path="res://PlayerKilled.gd" type="Script" id=5]
[ext_resource path="res://MenuTransition.gd" type="Script" id=6]

[sub_resource type="DynamicFont" id=1]
size = 45
font_data = ExtResource( 1 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float barRange : hint_range(0.0, 0.1) = 0.01;
uniform float barOffsetIntensity : hint_range(0.0, 0.01) = 0.000;
uniform float noiseQuality : hint_range(1.0, 2000) = 500;
uniform float noiseIntensity : hint_range(0.0, 0.03) = 0.000;
uniform float colorOffsetIntensity : hint_range(0.0, 2.0) = 0.175;
uniform float redMultiplier : hint_range(0.0, 0.01) = 0.006;
uniform float redIntensity : hint_range(0.0, 1.0) = 1.0;
uniform float greenMultiplier : hint_range(0.0, 0.01) = 0.0073;
uniform float greenIntensity : hint_range(0.0, 1.0) = 0.97;


float rand(vec2 co)
{
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

float verticalBar(float pos, float uvY, float offset)
{
    float edge0 = (pos - barRange);
    float edge1 = (pos + barRange);

    float x = smoothstep(edge0, pos, uvY) * offset;
    x -= smoothstep(pos, edge1, uvY) * offset;
    return x;
}

void fragment()
{
	float uvX, uvY;
	uvX = UV.x;
	uvY = UV.y;
    for (float i = 0.0; i < 0.71; i += 0.1313)
    {
        float d = mod(TIME * i, 1.7);
        float o = sin(1.0 - tan(TIME * 0.24 * i));
    	o *= barOffsetIntensity;
        uvX += verticalBar(d, uvY, o);
    }

    uvY *= noiseQuality;
    uvY = float(int(uvY)) * (1.0 / noiseQuality);
    float noise = rand(vec2(TIME * 0.00001, uvY));
	uvX += noise * noiseIntensity;

    vec2 offsetR = vec2(redMultiplier * sin(TIME * redIntensity), 0.0) * colorOffsetIntensity;
    vec2 offsetG = vec2(greenMultiplier * cos(TIME * greenIntensity), 0.0) * colorOffsetIntensity;

	vec2 uv = vec2(uvX, 1.0-uvY);
    float r = texture(SCREEN_TEXTURE, uv + offsetR).r;
    float g = texture(SCREEN_TEXTURE, uv + offsetG).g;
    float b = texture(SCREEN_TEXTURE, uv).b;

    COLOR = vec4(r, g, b, 1.0);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 7 )
shader_param/barRange = 0.05
shader_param/barOffsetIntensity = 0.0
shader_param/noiseQuality = 866.239
shader_param/noiseIntensity = 0.001
shader_param/colorOffsetIntensity = 0.026
shader_param/redMultiplier = 0.006
shader_param/redIntensity = 1.0
shader_param/greenMultiplier = 0.0073
shader_param/greenIntensity = 0.97

[node name="PlayerKilled" type="CanvasLayer"]
layer = 99
script = ExtResource( 5 )

[node name="Label" type="Label" parent="."]
margin_left = 12.0208
margin_top = 974.013
margin_right = 861.021
margin_bottom = 1069.01
custom_fonts/font = SubResource( 1 )
text = "Lost connection...
Would you like to return to the menu?"

[node name="ReturnButton" type="TextureButton" parent="."]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -506.052
margin_top = -97.7595
margin_right = 243.949
margin_bottom = 22.2407
rect_scale = Vector2( 0.66, 0.66 )
texture_normal = ExtResource( 2 )
texture_pressed = ExtResource( 3 )
texture_hover = ExtResource( 4 )
texture_focused = ExtResource( 4 )

[node name="VCREffect" type="ColorRect" parent="."]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -960.0
margin_bottom = -540.0
rect_scale = Vector2( 2, 2 )
mouse_filter = 2
script = ExtResource( 6 )

[node name="Tween" type="Tween" parent="VCREffect"]

[connection signal="pressed" from="ReturnButton" to="." method="_on_ReturnButton_pressed"]
